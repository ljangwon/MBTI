# -*- coding: cp949 -*-
#======================
# imports
#======================
import tkinter as tk
from tkinter import ttk
from tkinter import messagebox as msg 
from tkinter import scrolledtext 

# Create instance
win = tk.Tk()

global index

# Add a title       
win.title("MBTI 검사1")

tabControl = ttk.Notebook(win)    # Create Tab Control

# Tab Control 0 refactoring  ---------------------------------------------------------
tab0 = ttk.Frame(tabControl)
tabControl.add(tab0, text=' 인적사항 ')
tab1 = ttk.Frame(tabControl)            
tabControl.add(tab1, text='Page 1')
tab2 = ttk.Frame(tabControl)
tabControl.add(tab2, text='Page 2')
tab3 = ttk.Frame(tabControl)
tabControl.add(tab3, text='Page 3')
tab4 = ttk.Frame(tabControl)
tabControl.add(tab4, text='Page 4')
tab5 = ttk.Frame(tabControl)
tabControl.add(tab5, text='결과')
tabControl.pack(expand=1, fill="both")  # Pack to make visible

# LabelFrame using tab0 as the parent
page0 = ttk.LabelFrame(tab0, text=' 인적사항 ')
page0.grid(column=0, row=0, padx=8, pady=2)

page1 = ttk.LabelFrame(tab1, text=' 검사 Page1 ')
page1.grid(column=0, row=0, padx=8, pady=2)

page2 = ttk.LabelFrame(tab2, text=' 검사 Page2 ')
page2.grid(column=0, row=0, padx=8, pady=2)

page3 = ttk.LabelFrame(tab3, text=' 검사 Page3 ')
page3.grid(column=0, row=0, padx=8, pady=2)

page4 = ttk.LabelFrame(tab4, text=' 검사 Page4 ')
page4.grid(column=0, row=0, padx=8, pady=2)

page5 = ttk.LabelFrame(tab5, text=' 검사 결과 ')
page5.grid(column=0, row=0, padx=8, pady=2)


# Modify adding a Label using mighty as the parent instead of win
a_label = ttk.Label(page0, text="입력하세요 이름:")
a_label.grid(column=0, row=0, sticky='W')

# Adding a Textbox Entry widget
name = tk.StringVar()
name_entered = ttk.Entry(page0, width=12, textvariable=name)
name_entered.grid(column=0, row=1, sticky='W')               # align left/West

# Modified Button Click Function
def click_me(): 
    start_label.configure(text='Hello ' + name.get() + ' ' + 
                     grade_chosen.get() + ' Now MBTI Start ... ')
    win.title( "MBTI 검사  "+ name.get() + " 진행중 ")
# Adding a Button
start_button = ttk.Button(page0, text=' 검사시작! ', command=click_me)   
start_button.grid(column=2, row=1)                                

ttk.Label(page0, text="선택하세요 학년:").grid(column=1, row=0)
grade = tk.StringVar()
grade_chosen = ttk.Combobox(page0, width=12, textvariable=str, state='readonly')
grade_chosen['values'] = ('E3', 'E4', 'E5', 'E6', 'M1', 'M2', 'M3')
grade_chosen.grid(column=1, row=1)
grade_chosen.current(0)

start_label = ttk.Label(page0, text= ' ')
start_label.grid(row=2, sticky='WE', columnspan=3)

name_entered.focus()      # Place cursor into name Entry

# Tab Control 1 refactoring  ---------------------------------------------------------

radioVar = []
Qnum = 48

for i in range(Qnum):
    radioVar.append( tk.IntVar() )

# Questions LabelFrame 
pageLF = []

for i in range(Qnum):
    if 0<= i <= 11 :
        pageLF.append( ttk.LabelFrame(page1) )
        pageLF[i].grid(column=0, row=i, sticky='WE')
    elif 12<= i <= 23 :
        pageLF.append( ttk.LabelFrame(page2) )
        pageLF[i].grid(column=0, row=i-12, sticky='WE')
    elif 24<= i <= 35 :            
        pageLF.append( ttk.LabelFrame(page3) )
        pageLF[i].grid(column=0, row=i-24, sticky='WE')
    elif 36<= i <= 47 :
        pageLF.append( ttk.LabelFrame(page4) )
        pageLF[i].grid(column=0, row=i-36, sticky='WE')    
 
Qa = []
Qb = []
for i in range(Qnum):
    Qa.append( '' )    
for i in range(Qnum):
    Qb.append( '' )    


# Q1 질문내용
Qa[0] = ' 질문1a 나는 행동에 집착하고 활동과 행동을 지향한다. '
Qb[0] = ' 질문1a 나는 생각에 집착하고 사고와 생각들을 지향한다. '

# Q2 질문내용
Qa[1] = ' 질문2a 일반적인 개념을 통해 새로운 것을 배운다. '
Qb[1] = ' 질문2b 모방과 관찰을 통해 새로운 사실을 배운다. '

# Q3 질문내용
Qa[2] = ' 질문3a 나는 진실을 목표로 삼는다. 나의 이성으로 더 결정을 내린다. '
Qb[2] = ' 질문3b 나는 조화를 목표로 삼는다. 나의 감정으로 더 결정을 내린다. '

# Q4 질문내용
Qa[3] = ' 질문4a 나의 인생에 적응할 수 있기를 원하며 어떤 경험이든 하길 원한다. '
Qb[3] = ' 질문4b 나의 인생이 결정되어 있고 인생에 나의 의지를 반영하는 것을 선호한다. '

# Q5 질문내용
Qa[4] = ' 질문5a 쉽게 주의가 산만해진다. '
Qb[4] = ' 질문5b 집중을 잘 한다. '

# Q6 질문내용
Qa[5] = ' 질문6a 전통적인 것과 이미 친숙한 것들의 진가를 인정하며 즐긴다. '
Qb[5] = ' 질문6b 새로운 것과 남다른 경험들의 진가를 인정하며 즐긴다.. '

# Q7 질문내용
Qa[6] = ' 질문7a 비합리적인 논리를 금방 알아낸다. '
Qb[6] = ' 질문7b 사람들이 언제 도움을 필요로 하는지 금방 알아낸다 '

# Q8 질문내용
Qa[7] = ' 질문8a 나는 그 어떤 것도 놓치지 않도록 나의 삶을 가능한 한 융통성 있게 유지한다. '
Qb[7] = ' 질문8b 나는 계획된 순서대로 정착된 삶을 위하여 일한다.. '

# Q9 질문내용
Qa[8] = ' 질문9a 혼자 있을 수 있는 사적인 영역을 즐긴다. '
Qb[8] = ' 질문9b 많은 일들이 생기는 대중적인 영역을 즐긴다. '

# Q10 질문내용
Qa[9] = ' 질문10a 상상력이 풍부한 행동을 한다. '
Qb[9] = ' 질문10b 실제적으로 행동한다. '

# Q11 질문내용
Qa[10] = ' 질문11a 논리적인 원칙에 따라 세상만사가 이루어지기를 기대한다. '
Qb[10] = ' 질문11b 세상이 개인차를 인정해 주기를 기대한다. '

# Q12 질문내용
Qa[11] = ' 질문12a 참을성이 있으며 적응능력이 있다. '
Qb[11] = ' 질문12b 나 자신을 통제하며 결단성이 있고 엄하다. '

# Q13 질문내용
Qa[12] = ' 질문13a 외부의 사건이나 질문에 대응하기 전에 생각할 시간을 갖는다. '
Qb[12] = ' 질문13b 외부의 사건이나 질문에 대하여 신속하게 대응한다. '

# Q14 질문내용
Qa[13] = ' 질문14a 자료가 제시하고 있는 도전과 미래의 기회들을 알고 싶어 한다. '
Qb[13] = ' 질문14b 자료의 실제적이고 현실적인 적용을 알고 싶어 한다. '

# Q15 질문내용
Qa[14] = ' 질문15a 사교적이고 친근감이 있고 또한 때로는 시간 보내기형의 이야기를 나눈다. '
Qb[14] = ' 질문15b 짧고 요약된 의사소통을 선호한다. '

# Q16 질문내용
Qa[15] = ' 질문16a 변화의 가능성을 생각하면서 입장을 임시적인 것으로 간주한다. '
Qb[15] = ' 질문16b 명확하게 언급하면서 입장과 결정에 대해 단언을 내린다. '

# Q17 질문내용
Qa[16] = ' 질문17a 말로 혹은 얼굴을 맞대고 의사소통하기보다는 글로 하는 것을 더 선호한다. '
Qb[16] = ' 질문17b 글로 의사를 전달하기보다는 얼굴을 맞대고 말로 하는 것을 더 선호한다. '

# Q18 질문내용
Qa[17] = ' 질문18a 우선적으로 나의 통찰과 개념, 생각들을 제시한다. '
Qb[17] = ' 질문18b 우선적으로 내가 지닌 증거, 사실, 세부사항 그리고 사례들을 제시한다. '

# Q19 질문내용
Qa[18] = ' 질문19a 다른 사람들의 약점을 본다. '
Qb[18] = ' 질문19b 다른 사람들의 장점을 본다. '

# Q20 질문내용
Qa[19] = ' 질문20a 결과와 성취지향적인 의사소통을 한다. '
Qb[19] = ' 질문20b 선택성과 우연성을 지향하는 의사소통을 한다. '

# Q21 질문내용
Qa[20] = ' 질문21a 개인적인 정보들을 쉽게 말한다. '
Qb[20] = ' 질문21b 개인적인 정보들을 이야기하기를 망설인다. '

# Q22 질문내용
Qa[21] = ' 질문22a 자유롭게 은유와 유추를 사용한다. '
Qb[21] = ' 질문22b 세부적인 서술을 빈번하게 사용한다. '

# Q23 질문내용
Qa[22] = ' 질문23a 논리적이고 객관적인 토론을 생각해야 할 자료로 인식한다. '
Qb[22] = ' 질문23b 사람들의 감정과 정서들을 생각해야 할 자료로 인식한다. '

# Q24 질문내용
Qa[23] = ' 질문24a 모임에서 빗나가는 토론을 좋아하지 않는다. '
Qb[23] = ' 질문24b 모임에서 토론이 옆길로 새는 것에 대해 마음을 두지 않는다. '

# Q25 질문내용
Qa[24] = ' 질문25a 새로운 인간관계를 시작할 때 조심성을 보인다. '
Qb[24] = ' 질문25b 새로운 인간관계를 쉽게 시작하며 조심성을 많이 보이지 않는다. '

# Q26 질문내용
Qa[25] = ' 질문26a 나의 인간관계에 대해 절대적인 것으로써 예견 가능성을 추구한다. '
Qb[25] = ' 질문26b 나의 인간관계에 있어서 변화란 절대적인 중요성을 가지는 것으로 평가한다. '

# Q27 질문내용
Qa[26] = ' 질문27a 인간관계에 대해 논리적인 이유를 규명한다. '
Qb[26] = ' 질문27b 인간관계에 대해 나의 개인적인 이유를 규명한다. '

# Q28 질문내용
Qa[27] = ' 질문28a 두 사람간의 관계에서 문제가 일어날 때에 문제를 다룬다. '
Qb[27] = ' 질문28b 두 사람간의 관계에 대한 문제를 다루기 위해 시기를 정해 놓기를 원한다. '

# Q29 질문내용
Qa[28] = ' 질문29a 나는 많은 친구들과 우정을 나누는 것을 좋아한다. '
Qb[28] = ' 질문29b 적은 수의 친구들과 깊은 관계를 맺기를 좋아한다. '

# Q30 질문내용
Qa[29] = ' 질문30a 이상적인 관계에 대해 백일몽을 꾸며 현실을 간과한다. '
Qb[29] = ' 질문30b 백일몽을 꾸기는 하나, 관계에서 나타나는 현실은 알고 있다. '

# Q31 질문내용
Qa[30] = ' 질문31a 나의 관심을 나의 개인적인 말과 행동을 통해 표현한다. '
Qb[30] = ' 질문31b 나의 관심을 보다 감정을 배제한 상태로 표현한다. '

# Q32 질문내용
Qa[31] = ' 질문32a 사교적인 모임의 일정에 따르는 활동들을 해야 할 당위성을 느낀다. '
Qb[31] = ' 질문32b 사교적인 모임의 일정에 따르는 활동들에 관심을 덜 느낀다. '

# Q33 질문내용
Qa[32] = ' 질문33a 나의 개인적인 공간과 시간을 쉽게 다른 사람들과 나눈다. '
Qb[32] = ' 질문33b 나의 개인적인 공간과 많은 사적인 시간을 필요로 한다 '

# Q34 질문내용
Qa[33] = ' 질문34a 관계에 있어서 명확한 역할과 기대를 지니고 있다. '
Qb[33] = ' 질문34b 역할이나 기대 등은 언제나 타협이 가능한 것으로 믿는다. '

# Q35 질문내용
Qa[34] = ' 질문35a 나의 인간관계를 손상시킬 수도 있는 부정적인 면들로부터 회피한다. '
Qb[34] = ' 질문35b 나의 인간관계에 도움이 될 만한 섬세한 감정들을 무시한다. '

# Q36 질문내용
Qa[35] = ' 질문36a 함께 일함으로써 나의 인간관계를 구축한다고 간주한다. '
Qb[35] = ' 질문36b 업무는 나의 인간관계를 침범하는 것으로 간주한다. '

# Q37 질문내용
Qa[36] = ' 질문37a 집중할 수 있는 조용함을 추구한다. '
Qb[36] = ' 질문37b 행동 지향적인 다양한 업무를 추구한다. '

# Q38 질문내용
Qa[37] = ' 질문38a 이전에 내가 얻은 작업경험이 나타내는 것보다는 좀 다르게 일을 한다. '
Qb[37] = ' 질문38b 이전에 내가 습득한 작업 경험을 활용한다. '

# Q39 질문내용
Qa[38] = ' 질문39a 나의 업무의 기본으로 논리와 분석을 사용한다. '
Qb[38] = ' 질문39b 업무의 기본으로 개인의 가치기준들과 더불어 다른 사람의 견해도 포함시킨다. '

# Q40 질문내용
Qa[39] = ' 질문40a 불시에 생기는 업무를 처리할 수 있을 때에 최선을 다한다. '
Qb[39] = ' 질문40b 나의 일을 계획할 수 있고 계획하는 일을 할 수 있을 때에 최선을 다한다. '

# Q41 질문내용
Qa[40] = ' 질문41a 심사숙고를 통해 나의 생각을 발전시킨다. '
Qb[40] = ' 질문41b 토의를 통해 나의 생각을 발전시킨다. '

# Q42 질문내용
Qa[41] = ' 질문42a 새로운 기술을 배우려고 하기보다는 이미 알고 있는 기존의 기술을 적용한다. '
Qb[41] = ' 질문42b 도전이나 혁신과 관련되는 새로운 기술을 배우는 것을 즐긴다. '

# Q43 질문내용
Qa[42] = ' 질문43a 다른 사람들을 엄격하게 다루며 관리한다. '
Qb[42] = ' 질문43b 다른 사람들과 동감하면서 그들과 관리하고 관여한다. '

# Q44 질문내용
Qa[43] = ' 질문44a 더 많은 정보를 수집하기 위해 결정에 얽매이는 것을 거부한다. '
Qb[43] = ' 질문44b 가능성을 희박하게 보며, 일단 결정을 내리면 만족한다. '

# Q45 질문내용
Qa[44] = ' 질문45a 일의 진행에 종종 변화가 필요하며 외부 사건들을 찾아다닌다. '
Qb[44] = ' 질문45b 나의 일에 집중하고 외부 사건들은 안중에 없다. '

# Q46 질문내용
Qa[45] = ' 질문46a 사물들을 구체적으로 언급하는 것을 좋아한다. '
Qb[45] = ' 질문46b 사물을 일반적으로 언급하는 것을 좋아한다. '

# Q47 질문내용
Qa[46] = ' 질문47a 업무를 최대한 효과적으로 해내기 위해 조화를 필요로 한다. '
Qb[46] = ' 질문47b 조화롭지 않아도 잘 지낼 수 있으며 여전히 업무를 효율적으로 잘 해 낸다. '

# Q48 질문내용
Qa[47] = ' 질문48a 신속하게 결정하고 마감하려 한다. '
Qb[47] = ' 질문48b 결정을 미루며 가능성을 찾는다. '   


radioBtnA = []
radioBtnB = []

def radioCall():
    done = True
    for i in range(Qnum):
        answer = radioVar[i].get()
        print( i+1)
        print( ':' ) 
        print( answer )
        if answer == 0:            
            done = False            
            break
            
    if done == False:
        print( '계속 질문에 답 하세요.')
    else :
        msg.showinfo( '완료', '모두 답하셨습니다. 다음 페이지로 넘어가세요.')
        showResult()

for i in range(Qnum):
    radioBtnA.append( tk.Radiobutton(pageLF[i], text= Qa[i], variable=radioVar[i], value=(i+1)*10+1, command=radioCall ) )
    radioBtnA[i].grid(column=0, row=0, sticky=tk.W)
    radioBtnB.append( tk.Radiobutton(pageLF[i], text= Qb[i], variable=radioVar[i], value=(i+1)*10+2, command=radioCall ) )
    radioBtnB[i].grid(column=0, row=1, sticky=tk.W)

       
# Using a scrolled Text control    
scrol_w  = 80
scrol_h  = 40

scr = scrolledtext.ScrolledText(page5, width=scrol_w, height=scrol_h, wrap=tk.WORD)
scr.grid(column=0, row=5, sticky='WE', columnspan=3)   

R1a_score = 0
R2a_score = 0
R3a_score = 0
R4a_score = 0

R1b_score = 0
R2b_score = 0
R3b_score = 0
R4b_score = 0

def showResult():
    global R1a_score
    global R2a_score
    global R3a_score
    global R4a_score
    
    global R1b_score
    global R2b_score
    global R3b_score
    global R4b_score
        
    for i in range(Qnum):
        r = radioVar[i].get()
        if r == 11 or r == 21 or r == 32 or r == 41:
            R1a_score += 1
        elif r == 12 or r == 22 or r == 31 or r == 42:
            R1b_score += 1
            
    global scr
    scr.insert(tk.INSERT, 'R1 A : '+  str(R1a_score) + '   R1 B : ' + str(R1b_score) + '  ')
    scr.insert(tk.INSERT, 'R2 A : '+  str(R2a_score) + '   R2 B : ' + str(R2b_score) + '  ')
    scr.insert(tk.INSERT, 'R3 A : '+  str(R3a_score) + '   R3 B : ' + str(R3b_score) + '  ')
    scr.insert(tk.INSERT, 'R4 A : '+  str(R4a_score) + '   R4 B : ' + str(R4b_score) + '                      ')
    
#======================
# Start GUI
#======================
win.mainloop()